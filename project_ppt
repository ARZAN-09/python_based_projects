<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hand Gesture Mouse Control üñêÔ∏èüñ±Ô∏è</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            background: #0a0a0a;
            color: #ffffff;
            overflow-x: hidden;
        }

        /* Animated Background */
        .animated-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background: linear-gradient(-45deg, #0a0a0a, #1a1a2e, #16213e, #0f3460);
            background-size: 400% 400%;
            animation: gradientShift 15s ease infinite;
        }

        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        /* Navigation */
        nav {
            position: fixed;
            top: 0;
            width: 100%;
            background: rgba(10, 10, 10, 0.95);
            backdrop-filter: blur(10px);
            z-index: 1000;
            padding: 1rem 0;
            transition: all 0.3s ease;
        }

        nav.scrolled {
            background: rgba(10, 10, 10, 0.98);
            box-shadow: 0 2px 20px rgba(0, 200, 255, 0.1);
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 2rem;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: bold;
            color: #00c8ff;
            text-decoration: none;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-links a {
            color: #ffffff;
            text-decoration: none;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-links a:hover {
            color: #00c8ff;
        }

        .nav-links a::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, #00c8ff, #8a2be2);
            transition: width 0.3s ease;
        }

        .nav-links a:hover::after {
            width: 100%;
        }

        /* Mobile Menu */
        .mobile-menu {
            display: none;
            flex-direction: column;
            cursor: pointer;
        }

        .mobile-menu span {
            width: 25px;
            height: 3px;
            background: #ffffff;
            margin: 3px 0;
            transition: 0.3s;
        }

        /* Sections */
        section {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
            opacity: 0;
            transform: translateY(50px);
            transition: all 0.8s ease;
        }

        /* Content sections should not take full height */
        .content-section {
            min-height: auto;
            padding: 6rem 2rem;
        }

        section.visible {
            opacity: 1;
            transform: translateY(0);
        }

        .container {
            max-width: 1200px;
            width: 100%;
            text-align: center;
        }

        /* Hero Section */
        .hero {
            background: rgba(0, 0, 0, 0.3);
            position: relative;
        }

        .hero h1 {
            font-size: 4rem;
            margin-bottom: 1rem;
            background: linear-gradient(45deg, #00c8ff, #8a2be2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: titleGlow 2s ease-in-out infinite alternate;
        }

        @keyframes titleGlow {
            from { filter: drop-shadow(0 0 20px rgba(0, 200, 255, 0.3)); }
            to { filter: drop-shadow(0 0 30px rgba(138, 43, 226, 0.5)); }
        }

        .hero p {
            font-size: 1.3rem;
            margin-bottom: 2rem;
            color: #cccccc;
        }

        .cta-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
        }

        .btn {
            padding: 1rem 2rem;
            border: none;
            border-radius: 50px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            position: relative;
            overflow: hidden;
        }

        .btn-primary {
            background: linear-gradient(45deg, #00c8ff, #8a2be2);
            color: white;
        }

        .btn-secondary {
            background: transparent;
            border: 2px solid #00c8ff;
            color: #00c8ff;
        }

        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(0, 200, 255, 0.3);
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        /* Content Sections */
        .content-section {
            background: rgba(255, 255, 255, 0.02);
            margin: 0;
        }

        .content-section:nth-child(even) {
            background: rgba(0, 200, 255, 0.02);
        }

        .section-title {
            font-size: 2.5rem;
            margin-bottom: 2rem;
            color: #00c8ff;
        }

        .section-content {
            font-size: 1.1rem;
            line-height: 1.8;
            color: #cccccc;
            max-width: 800px;
            margin: 0 auto;
        }

        /* Features Grid */
        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin: 2rem 0;
        }

        .feature-card {
            background: rgba(255, 255, 255, 0.05);
            padding: 2rem;
            border-radius: 15px;
            border: 1px solid rgba(0, 200, 255, 0.2);
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

        .feature-card:hover {
            transform: translateY(-10px);
            border-color: #00c8ff;
            box-shadow: 0 20px 40px rgba(0, 200, 255, 0.1);
        }

        .feature-icon {
            font-size: 3rem;
            color: #8a2be2;
            margin-bottom: 1rem;
        }

        .feature-card h3 {
            font-size: 1.3rem;
            margin-bottom: 1rem;
            color: #00c8ff;
        }

        /* Code Block */
        .code-block {
            background: #1a1a1a;
            border: 1px solid #333;
            border-radius: 10px;
            padding: 1.5rem;
            margin: 1rem 0;
            font-family: 'Courier New', monospace;
            text-align: left;
            position: relative;
            overflow-x: auto;
        }

        .code-block::before {
            content: 'bash';
            position: absolute;
            top: 0.5rem;
            right: 1rem;
            font-size: 0.8rem;
            color: #666;
        }

        /* Controls Grid */
        .controls-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin: 2rem 0;
        }

        .control-key {
            background: linear-gradient(145deg, #2a2a2a, #1a1a1a);
            padding: 1rem;
            border-radius: 10px;
            border: 2px solid #333;
            transition: all 0.3s ease;
        }

        .control-key:hover {
            border-color: #00c8ff;
            transform: scale(1.05);
        }

        .key {
            display: inline-block;
            background: #00c8ff;
            color: #000;
            padding: 0.3rem 0.7rem;
            border-radius: 5px;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        /* Gestures */
        .gestures-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            margin: 2rem 0;
        }

        .gesture-card {
            background: rgba(138, 43, 226, 0.1);
            padding: 2rem;
            border-radius: 15px;
            border: 2px solid rgba(138, 43, 226, 0.3);
            transition: all 0.3s ease;
        }

        .gesture-card:hover {
            transform: scale(1.05);
            border-color: #8a2be2;
            box-shadow: 0 15px 35px rgba(138, 43, 226, 0.2);
        }

        .gesture-emoji {
            font-size: 4rem;
            margin-bottom: 1rem;
            display: block;
            animation: gestureFloat 3s ease-in-out infinite;
        }

        @keyframes gestureFloat {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }

        /* Notes Collapsible */
        .notes-toggle {
            background: #8a2be2;
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 10px;
            cursor: pointer;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            margin-bottom: 1rem;
        }

        .notes-toggle:hover {
            background: #9d4edd;
            transform: translateY(-2px);
        }

        .notes-content {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease;
        }

        .notes-content.active {
            max-height: 500px;
        }

        .notes-list {
            background: rgba(138, 43, 226, 0.1);
            padding: 2rem;
            border-radius: 10px;
            text-align: left;
        }

        .notes-list ul {
            list-style-type: none;
            padding-left: 0;
        }

        .notes-list li {
            padding: 0.5rem 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .notes-list li::before {
            content: '‚ö†Ô∏è';
            margin-right: 1rem;
        }

        /* Demo Section */
        .demo-placeholder {
            background: linear-gradient(45deg, #1a1a1a, #2a2a2a);
            border: 2px dashed #00c8ff;
            border-radius: 15px;
            padding: 4rem;
            margin: 2rem 0;
            position: relative;
            overflow: hidden;
        }

        .demo-placeholder::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(0, 200, 255, 0.1), transparent);
            animation: shimmer 2s infinite;
        }

        @keyframes shimmer {
            0% { left: -100%; }
            100% { left: 100%; }
        }

        /* Footer */
        footer {
            background: rgba(0, 0, 0, 0.8);
            padding: 2rem;
            text-align: center;
            border-top: 1px solid rgba(0, 200, 255, 0.2);
        }

        .footer-content {
            max-width: 1200px;
            margin: 0 auto;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }

            .mobile-menu {
                display: flex;
            }

            .hero h1 {
                font-size: 2.5rem;
            }

            .cta-buttons {
                flex-direction: column;
                align-items: center;
            }

            .section-title {
                font-size: 2rem;
            }

            section {
                padding: 1rem;
            }
        }

        /* Utility Classes */
        .text-gradient {
            background: linear-gradient(45deg, #00c8ff, #8a2be2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
    </style>
</head>
<body>
    <div class="animated-bg"></div>

    <nav id="navbar">
        <div class="nav-container">
            <a href="#home" class="logo">üñêÔ∏è GestureControl</a>
            <ul class="nav-links">
                <li><a href="#overview">Overview</a></li>
                <li><a href="#features">Features</a></li>
                <li><a href="#requirements">Requirements</a></li>
                <li><a href="#how-to-run">How to Run</a></li>
                <li><a href="#controls">Controls</a></li>
                <li><a href="#gestures">Gestures</a></li>
                <li><a href="#notes">Notes</a></li>
            </ul>
            <div class="mobile-menu">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <section id="home" class="hero">
        <div class="container">
            <h1>Hand Gesture Mouse Control üñêÔ∏èüñ±Ô∏è</h1>
            <p>Control your computer mouse with hand gestures using AI + Computer Vision</p>

        </div>
    </section>

    <!-- Overview -->
    <section id="overview" class="content-section">
        <div class="container">
            <h2 class="section-title">Overview</h2>
            <div class="section-content">
                <p>This innovative project combines the power of OpenCV, MediaPipe, and PyAutoGUI to create an intuitive hand gesture-based mouse control system. Using your webcam, the system tracks your hand movements in real-time and translates them into precise cursor actions, clicks, and scrolling commands.</p>
                <p>Experience the future of human-computer interaction with seamless gesture recognition that works right out of the box.</p>
            </div>
        </div>
    </section>

    <!-- Features -->
    <section id="features" class="content-section">
        <div class="container">
            <h2 class="section-title">‚ú® Features</h2>
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-video"></i>
                    </div>
                    <h3>Real-time Hand Tracking</h3>
                    <p>Advanced MediaPipe integration for accurate hand detection and landmark tracking at 30+ FPS.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-mouse-pointer"></i>
                    </div>
                    <h3>Cursor Movement</h3>
                    <p>Smooth cursor control using index finger movements with customizable sensitivity settings.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-hand-pointer"></i>
                    </div>
                    <h3>Pinch to Click</h3>
                    <p>Intuitive clicking mechanism using thumb and index finger pinch gestures.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-scroll"></i>
                    </div>
                    <h3>Gesture Scrolling</h3>
                    <p>Two-finger peace sign for vertical scrolling with natural hand movements.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-toggle-on"></i>
                    </div>
                    <h3>Mode Toggles</h3>
                    <p>Easy switching between different control modes with keyboard shortcuts.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-eye"></i>
                    </div>
                    <h3>Visual Feedback</h3>
                    <p>On-screen overlay showing gesture recognition and current mode status.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Requirements -->
    <section id="requirements" class="content-section">
        <div class="container">
            <h2 class="section-title">üõ†Ô∏è Requirements</h2>
            <div class="section-content">
                <p>Install the required Python packages using pip:</p>
                <div class="code-block">
pip install opencv-python mediapipe pyautogui numpy
                </div>
                <p><strong>System Requirements:</strong></p>
                <ul style="text-align: left; max-width: 600px; margin: 1rem auto;">
                    <li>Python 3.7 or higher</li>
                    <li>Webcam or external camera</li>
                    <li>Windows, macOS, or Linux</li>
                    <li>Minimum 4GB RAM recommended</li>
                </ul>
            </div>
        </div>
    </section>

    <!-- How to Run -->
    <section id="how-to-run" class="content-section">
        <div class="container">
            <h2 class="section-title">üöÄ How to Run</h2>
            <div class="section-content">
                <div style="text-align: left; max-width: 800px; margin: 0 auto;">
                    <h3 style="color: #00c8ff; margin-bottom: 1rem;">Step-by-Step Guide:</h3>
                    <ol style="line-height: 2; color: #cccccc;">
                        <li><strong>Clone the repository:</strong></li>
                        <div class="code-block">
git clone https://github.com/yourusername/hand-gesture-mouse-control.git
cd hand-gesture-mouse-control
                        </div>
                        <li><strong>Install dependencies:</strong></li>
                        <div class="code-block">
pip install -r requirements.txt
                        </div>
                        <li><strong>Run the application:</strong></li>
                        <div class="code-block">
python main.py
                        </div>
                        <li><strong>Position your hand in front of the camera and start controlling!</strong></li>
                    </ol>
                </div>
            </div>
        </div>
    </section>

    <!-- Controls -->
    <section id="controls" class="content-section">
        <div class="container">
            <h2 class="section-title">üéÆ Controls</h2>
            <div class="controls-grid">
                <div class="control-key">
                    <span class="key">ESC</span>
                    <div>Exit Application</div>
                </div>
                <div class="control-key">
                    <span class="key">M</span>
                    <div>Toggle Mirror Mode</div>
                </div>
                <div class="control-key">
                    <span class="key">G</span>
                    <div>Gesture Overlay</div>
                </div>
                <div class="control-key">
                    <span class="key">S</span>
                    <div>Scroll Mode</div>
                </div>
                <div class="control-key">
                    <span class="key">C</span>
                    <div>Click Mode</div>
                </div>
            </div>
        </div>
    </section>

    <!-- Gestures -->
    <section id="gestures" class="content-section">
        <div class="container">
            <h2 class="section-title">üñêÔ∏è Gestures</h2>
            <div class="gestures-grid">
                <div class="gesture-card">
                    <span class="gesture-emoji">üëÜ</span>
                    <h3>Move Cursor</h3>
                    <p>Point with your index finger to control the mouse cursor position</p>
                </div>
                <div class="gesture-card">
                    <span class="gesture-emoji">ü§è</span>
                    <h3>Click</h3>
                    <p>Pinch your thumb and index finger together to perform a left click</p>
                </div>
                <div class="gesture-card">
                    <span class="gesture-emoji">‚úåÔ∏è</span>
                    <h3>Scroll</h3>
                    <p>Make a peace sign and move your hand up/down to scroll vertically</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Notes -->
    <section id="notes" class="content-section">
        <div class="container">
            <h2 class="section-title">‚ö†Ô∏è Notes</h2>
            <button class="notes-toggle" onclick="toggleNotes()">
                <i class="fas fa-chevron-down"></i> View Important Notes
            </button>
            <div class="notes-content" id="notesContent">
                <div class="notes-list">
                    <ul>
                        <li>Ensure good lighting for optimal hand detection accuracy</li>
                        <li>Keep your hand within the camera frame for continuous tracking</li>
                        <li>Calibrate sensitivity settings based on your screen resolution</li>
                        <li>Clean camera lens for better gesture recognition</li>
                        <li>Avoid cluttered backgrounds for improved hand isolation</li>
                        <li>Use the application in a well-lit environment</li>
                        <li>Close other camera applications before running</li>
                        <li>Position camera at eye level for best results</li>
                    </ul>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer>
        <div class="footer-content">
            <p>Made using <span class="text-gradient">OpenCV</span>, <span class="text-gradient">MediaPipe</span>, and <span class="text-gradient">PyAutoGUI</span></p>
            <div style="margin-top: 1rem;">
                <a href="https://github.com/ARZAN-09/python_based_projects" class="btn btn-secondary" style="margin: 0.5rem;">
                    <i class="fab fa-github"></i> GitHub
                </a>
                <a href="https://www.instagram.com/mr_arzan09_?igsh=eDB4M3F5YmxrdG1r" class="btn btn-secondary" style="margin: 0.5rem;">
                    <i class="fas fa-envelope"></i> Contact
                </a>
            </div>
        </div>
    </footer>

    <script>
        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Navbar scroll effect
        window.addEventListener('scroll', () => {
            const navbar = document.getElementById('navbar');
            if (window.scrollY > 100) {
                navbar.classList.add('scrolled');
            } else {
                navbar.classList.remove('scrolled');
            }
        });

        // Intersection Observer for fade-in animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, observerOptions);

        // Observe all sections
        document.querySelectorAll('section').forEach(section => {
            observer.observe(section);
        });

        // Notes toggle functionality
        function toggleNotes() {
            const content = document.getElementById('notesContent');
            const button = document.querySelector('.notes-toggle');
            
            content.classList.toggle('active');
            
            if (content.classList.contains('active')) {
                button.innerHTML = '<i class="fas fa-chevron-up"></i> Hide Notes';
            } else {
                button.innerHTML = '<i class="fas fa-chevron-down"></i> View Important Notes';
            }
        }

        // Add floating animation to gesture emojis
        document.querySelectorAll('.gesture-emoji').forEach((emoji, index) => {
            emoji.style.animationDelay = `${index * 0.5}s`;
        });

        // Mobile menu toggle (placeholder for future implementation)
        document.querySelector('.mobile-menu').addEventListener('click', function() {
            // Mobile menu functionality would go here
            console.log('Mobile menu clicked');
        });

        // Initialize first section as visible
        setTimeout(() => {
            document.querySelector('#home').classList.add('visible');
        }, 300);

        // Parallax effect for background
        window.addEventListener('scroll', () => {
            const scrolled = window.pageYOffset;
            const rate = scrolled * -0.5;
            const bg = document.querySelector('.animated-bg');
            bg.style.transform = `translateY(${rate}px)`;
        });

        // Add hover effects to cards
        document.querySelectorAll('.feature-card, .gesture-card').forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-10px) scale(1.02)';
            });
            
            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
        });

        // Button ripple effect
        document.querySelectorAll('.btn').forEach(button => {
            button.addEventListener('click', function(e) {
                const ripple = document.createElement('span');
                const rect = this.getBoundingClientRect();
                const size = Math.max(rect.width, rect.height);
                const x = e.clientX - rect.left - size / 2;
                const y = e.clientY - rect.top - size / 2;
                
                ripple.style.width = ripple.style.height = size + 'px';
                ripple.style.left = x + 'px';
                ripple.style.top = y + 'px';
                ripple.classList.add('ripple');
                
                this.appendChild(ripple);
                
                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });
    </script>
</body>
</html>
